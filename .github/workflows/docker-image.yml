name: Docker Image CI

on: [push, pull_request]

jobs:

  build:

    runs-on: ubuntu-latest

    permissions:
      pull-requests: write # needed to create and update comments in PRs

    steps:

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - name: Check Out Repo
      uses: actions/checkout@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v3
      with:
          images: kostua/jenkins_casc_lts
          flavor: |
            latest=false
          tags: |
            type=raw,value=jenkins_casc_lts
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=ref,event=pr
            type=ref,event=branch
            type=semver,pattern={{version}}
    
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        context: ./
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
        platforms: linux/amd64,linux/arm64,linux/arm/v7

        # If PR, put image tags in the PR comments
        # from https://github.com/marketplace/actions/create-or-update-comment      
    - name: Find comment for image tags
      uses: peter-evans/find-comment@v1
      if: github.event_name == 'pull_request'
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Docker image tag(s) pushed
      
        # If PR, put image tags in the PR comments
    - name: Create or update comment for image tags
      uses: peter-evans/create-or-update-comment@v1
      if: github.event_name == 'pull_request'
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```

            Labels added to images:
            ```text
            ${{ steps.docker_meta.outputs.labels }}
            ```
        edit-mode: replace
     
